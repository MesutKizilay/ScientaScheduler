@page "/SPY04N"
@inject ITaskService taskService
@inject IResourceService resourceService
@using ScientaScheduler.BlazorApp.Data
@inject Microsoft.AspNetCore.Components.NavigationManager UriHelper
<h3>Gantt Şeması</h3>

<div class="gantt" style="height: 85vh;width: 85vw;">
        <SfGantt TValue="TaskDto" DataSource="@TaskDtos" Height="100%" Width="100%" Toolbar="@(new List<string>() { "Search" })" ProjectStartDate="@ProjectStart2" ProjectEndDate="@ProjectEnd2"
                 AllowFiltering="true" AllowSorting="true" AllowReordering="true" AllowResizing="true" AllowSelection="true" AllowRowDragAndDrop="true"
                 ShowColumnMenu="true" SelectedRowIndex="0" EnableContextMenu="true">

            <GanttTaskFields Id="ID0" Name="Konu" StartDate="PlanlananBaslamaTarihi" EndDate="PlanlananBitisTarihi" Duration="Duration" ParentID="UstGorevID" ResourceInfo="Resources"></GanttTaskFields>

            <GanttResourceFields Resources="ResourceDtos" TResources="ResourceDto" Id="ID0" Name="AdiSoyadi"></GanttResourceFields>
            <GanttLabelSettings LeftLabel="Resources" TValue="TaskDto"></GanttLabelSettings>

            <GanttEditSettings AllowEditing="true" Mode="Syncfusion.Blazor.Gantt.EditMode.Auto" AllowTaskbarEditing="true"></GanttEditSettings>

            <GanttEvents TValue="TaskDto" TaskbarEdited="TaskbarBeginEditHandler"
                         EndEdit="TaskbarBeginEditHandler"></GanttEvents>

            <GanttTooltipSettings ShowTooltip="true" TValue="TaskDto">
                <TaskbarTemplate>
                    @{
                        <div>ID: @context.ID0</div>
                        <div>Konu: @context.Konu</div>
                        <div>Başlama Tarihi: @context.PlanlananBaslamaTarihi</div>
                        <div>Bitiş Tarihi: @context.PlanlananBitisTarihi</div>
                        if (context.Resources.Any(r => r.ID0 == context.Sorumlu))
                        {
                            <div>Sorumlu: @context.Resources.Find(r => r.ID0 == context.Sorumlu).AdiSoyadi </div>
                        }
                        else
                        {<div>Sorumlu: Atanmadı </div> }
                    }
                </TaskbarTemplate>
            </GanttTooltipSettings>

            <GanttColumns>
                <GanttColumn Field="ID0" HeaderText="ID" TextAlign="TextAlign.Right" Width="40" MinWidth="20" HideAtMedia="(min-width: 700px)" AllowReordering="false"></GanttColumn>
                <GanttColumn Field="Konu" HeaderText="Görev Adı" Width="200" MinWidth="50"></GanttColumn>
                <GanttColumn Field="Resources" HeaderText="Sorumlu" Width="200px" MinWidth="50"></GanttColumn>
                <GanttColumn Field="PlanlananBaslamaTarihi" HeaderText="Başlama Tarihi" Width="100" MinWidth="20"></GanttColumn>
                <GanttColumn Field="PlanlananBitisTarihi" HeaderText="Bitiş Tarihi" Width="100" MinWidth="20"></GanttColumn>
                <GanttColumn Field="Duration" HeaderText="Süre" Width="100" MinWidth="20"></GanttColumn>
            </GanttColumns>
            @*<GanttEditDialogFields>
                <GanttEditDialogField Type="GanttDialogFieldType.General" HeaderText="General Tab"></GanttEditDialogField>
                <GanttEditDialogField Type="GanttDialogFieldType.Dependency" HeaderText="Dependency"></GanttEditDialogField>
            </GanttEditDialogFields>*@
        </SfGantt>
    </div>
    @code{

        public TaskDto taskDto = new TaskDto();
        public ResourceDto resourceDto = new ResourceDto();
        public List<TaskDto> TaskDtos = new List<TaskDto>();
        public List<ResourceDto> ResourceDtos = new List<ResourceDto>();

        private DateTime ProjectStart2 = new DateTime(2022, 12, 25);
        private DateTime ProjectEnd2 = new DateTime(2023, 6, 6);

        protected override void OnInitialized()
        {
            ResourceDtos = resourceService.GetResourceList();
        }

        protected async override Task OnInitializedAsync()
        {
            await Task.Delay(550);
            //ResourceDtos = await resourceService.GetResourceList();
            TaskDtos = await taskService.GetActiveTaskList();

            StateHasChanged();
        }

        private async void TaskbarBeginEditHandler(TaskbarEditedEventArgs<TaskDto> args)
        {
            await taskService.UpdateTask(args.Data);
        }
    }





@*<SfGantt DataSource="@TaskCollection" Height="450px" Width="700px">
        <GanttTaskFields Id="TaskId" Name="TaskName" StartDate="StartDate" EndDate="EndDate"
                         Duration="Duration" Progress="Progress" ParentID="ParentId">
        </GanttTaskFields>
        <GanttTooltipSettings ShowTooltip="true" TValue="TaskData">
            <TaskbarTemplate>
                @{
                    <div>TaskID: @context.TaskId</div>
                    <div>TaskName: @context.TaskId</div>
                }
            </TaskbarTemplate>
        </GanttTooltipSettings>
    </SfGantt>

    @code{
        private List<TaskData> TaskCollection { get; set; }
        //protected override void OnInitialized()
        //{
        //    this.TaskCollection = GetTaskCollection();
        //}

        public class TaskData
        {
            public int TaskId { get; set; }
            public string TaskName { get; set; }
            public DateTime StartDate { get; set; }
            public DateTime EndDate { get; set; }
            public string Duration { get; set; }
            public int Progress { get; set; }
            public int? ParentId { get; set; }
        }

        private static List<TaskData> GetTaskCollection()
        {
            List<TaskData> Tasks = new List<TaskData>()
    {
                new TaskData() { TaskId = 1, TaskName = "Project initiation", StartDate = new DateTime(2022, 01, 04), EndDate = new DateTime(2022, 01, 17), },
                new TaskData() { TaskId = 2, TaskName = "Identify Site location", StartDate = new DateTime(2022, 01, 04), Duration = "0", Progress = 30, ParentId = 1, },
                new TaskData() { TaskId = 3, TaskName = "Perform soil test", StartDate = new DateTime(2022, 01, 04), Duration = "4", Progress = 40, ParentId = 1, },
                new TaskData() { TaskId = 4, TaskName = "Soil test approval", StartDate = new DateTime(2022, 01, 04), Duration = "0", Progress = 30, ParentId = 1, },
                new TaskData() { TaskId = 5, TaskName = "Project estimation", StartDate = new DateTime(2022, 01, 04), EndDate = new DateTime(2022, 01, 17), },
                new TaskData() { TaskId = 6, TaskName = "Develop floor plan for estimation", StartDate = new DateTime(2022, 01, 06), Duration = "3", Progress = 30, ParentId = 5, },
                new TaskData() { TaskId = 7, TaskName = "List materials", StartDate = new DateTime(2022, 01, 06), Duration = "3", Progress = 40, ParentId = 5, },
                new TaskData() { TaskId = 8, TaskName = "Estimation approval", StartDate = new DateTime(2022, 01, 06), Duration = "0", Progress = 30, ParentId = 5, }
            };
            return Tasks;
        }
    }*@



































@*<SfGantt DataSource="@TaskCollection" Height="450px" Width="100%" ProjectStartDate="@ProjectStart" ProjectEndDate="@ProjectEnd" WorkUnit="WorkUnit.Hour">
        <GanttTaskFields Id="TaskId" Name="TaskName" StartDate="StartDate" EndDate="EndDate" Duration="Duration" Progress="Progress"
                         ParentID="ParentId" Work="Work" ResourceInfo="Resources" TaskType="TaskType">
        </GanttTaskFields>
        <GanttColumns>
            <GanttColumn Field="TaskId" HeaderText="ID"></GanttColumn>
            <GanttColumn Field="TaskName" HeaderText="Event Name"></GanttColumn>
            <GanttColumn Field="Resources" HeaderText="Event Resources" Width="300px"></GanttColumn>
            <GanttColumn Field="Duration" HeaderText="Duration"></GanttColumn>
            <GanttColumn Field="StartDate" HeaderText="Start Date"></GanttColumn>
            <GanttColumn Field="EndDate" HeaderText="End Date"></GanttColumn>
        </GanttColumns>
        <GanttEditSettings AllowEditing="true"></GanttEditSettings>
        <GanttResourceFields Resources="@ResourceCollection" Id="ResourceId" Name="ResourceName" Unit="Unit" TResources="ResourceAlloacteData"></GanttResourceFields>
        <GanttLabelSettings RightLabel="Resources" TValue="TaskData"></GanttLabelSettings>
    </SfGantt>

    @code{
        private DateTime ProjectStart = new DateTime(2022, 03, 25);
        private DateTime ProjectEnd = new DateTime(2022, 05, 10);
        private List<TaskData> TaskCollection { get; set; }
        private List<ResourceAlloacteData> ResourceCollection { get; set; }

        protected override void OnInitialized()
        {
            this.TaskCollection = GetTaskCollection();
            this.ResourceCollection = GetResources;
        }
        public class ResourceAlloacteData
        {
            public int ResourceId { get; set; }
            public string ResourceName { get; set; }
            public double Unit { get; set; }
        }
        public static List<ResourceAlloacteData> GetResources = new List<ResourceAlloacteData>()
    {
            new ResourceAlloacteData() { ResourceId= 1, ResourceName= "Martin Tamer"},
            new ResourceAlloacteData() { ResourceId= 2, ResourceName= "Rose Fuller" },
            new ResourceAlloacteData() { ResourceId= 3, ResourceName= "Margaret Buchanan" },
            new ResourceAlloacteData() { ResourceId= 4, ResourceName= "Fuller King" },
            new ResourceAlloacteData() { ResourceId= 5, ResourceName= "Davolio Fuller" },
            new ResourceAlloacteData() { ResourceId= 7, ResourceName= "Fuller Buchanan" },
            new ResourceAlloacteData() { ResourceId= 8, ResourceName= "Jack Davolio" },
            new ResourceAlloacteData() { ResourceId= 9, ResourceName= "Tamer Vinet" },
            new ResourceAlloacteData() { ResourceId= 10, ResourceName= "Vinet Fuller" },
            new ResourceAlloacteData() { ResourceId= 11, ResourceName= "Bergs Anton" },
            new ResourceAlloacteData() { ResourceId= 12, ResourceName= "Construction Supervisor" }
        };

        public class TaskData
        {
            public int TaskId { get; set; }
            public string TaskName { get; set; }
            public string TaskType { get; set; }
            public DateTime StartDate { get; set; }
            public DateTime EndDate { get; set; }
            public string Duration { get; set; }
            public int Progress { get; set; }
            public int? ParentId { get; set; }
            public double? Work { get; set; }
            public List<ResourceAlloacteData> Resources { get; set; }
        }

        public static List<TaskData> GetTaskCollection()
        {
            List<TaskData> Tasks = new List<TaskData>() {
                new TaskData() { TaskId = 1, TaskName = "Project initiation", StartDate = new DateTime(2022, 03, 28), EndDate = new DateTime(2022, 07, 28), TaskType ="FixedDuration", Work=128, Duration="4" },
                new TaskData() { TaskId = 2, TaskName = "Identify Site location", StartDate = new DateTime(2022, 03, 29), Progress = 30, ParentId = 1, Duration="2", Work=16, Resources = new List<ResourceAlloacteData>(){ new ResourceAlloacteData() { ResourceId=1, Unit=70} ,new ResourceAlloacteData() { ResourceId=6} } },
                new TaskData() { TaskId = 3, TaskName = "Perform soil test", StartDate = new DateTime(2022, 03, 29), Resources = new List<ResourceAlloacteData>(){ new ResourceAlloacteData() { ResourceId=2} ,new ResourceAlloacteData() { ResourceId=3} }, ParentId = 1, Work=96, Duration="4", TaskType="Fixed work" },
                new TaskData() { TaskId = 4, TaskName = "Soil test approval", StartDate = new DateTime(2022, 03, 29), Duration = "1", Progress = 30, ParentId = 1, Resources = new List<ResourceAlloacteData>(){ new ResourceAlloacteData() { ResourceId=8} ,new ResourceAlloacteData() { ResourceId=9} }, Work=16, TaskType="Fixed work" },
                new TaskData() { TaskId = 5, TaskName = "Project estimation", StartDate = new DateTime(2022, 03, 29), EndDate = new DateTime(2022, 04, 2), TaskType="Fixed Duration", Duration="4" },
                new TaskData() { TaskId = 6, TaskName = "Develop floor plan for estimation", StartDate = new DateTime(2022, 03, 29), Duration = "3", Progress = 30, ParentId = 5, Resources = new List<ResourceAlloacteData>(){ new ResourceAlloacteData() { ResourceId=4} }, Work=30, TaskType="Fixed work" },
                new TaskData() { TaskId = 7, TaskName = "List materials", StartDate = new DateTime(2022, 04, 01), Duration = "3", Progress = 30, ParentId = 5, TaskType="Fixedwork", Work=48, Resources = new List<ResourceAlloacteData>(){ new ResourceAlloacteData() { ResourceId=4},new ResourceAlloacteData() { ResourceId=8} }, },
                new TaskData() { TaskId = 8, TaskName = "Estimation approval", StartDate = new DateTime(2022, 04, 01), Duration = "2", ParentId = 5, Work=60, TaskType="Fixedwork", Resources = new List<ResourceAlloacteData>(){ new ResourceAlloacteData() { ResourceId= 12},new ResourceAlloacteData() { ResourceId= 5} }, }
            };
            return Tasks;
        }
    }*@










































@*<SfGantt DataSource="@TaskCollection" Height="450px" Width="100%" ProjectStartDate="@ProjectStart" ProjectEndDate="@ProjectEnd" WorkUnit="WorkUnit.Hour">
        <GanttTaskFields Id="TaskId" Name="TaskName" StartDate="StartDate" EndDate="EndDate" Duration="Duration" Progress="Progress"
                         ParentID="ParentId" ResourceInfo="Resources">
        </GanttTaskFields>
        <GanttColumns>
            <GanttColumn Field="TaskId" HeaderText="ID"></GanttColumn>
            <GanttColumn Field="TaskName" HeaderText="Event Name"></GanttColumn>
            <GanttColumn Field="Resources" HeaderText="Event Resources" Width="300px"></GanttColumn>
            <GanttColumn Field="Duration" HeaderText="Duration"></GanttColumn>
            <GanttColumn Field="StartDate" HeaderText="Start Date"></GanttColumn>
            <GanttColumn Field="EndDate" HeaderText="End Date"></GanttColumn>
        </GanttColumns>
        <GanttResourceFields Resources="@ResourceCollection" Id="ResourceId" Name="ResourceName" Unit="Unit" TResources="ResourceAlloacteData"></GanttResourceFields>
        <GanttLabelSettings RightLabel="Resources" TValue="TaskData"></GanttLabelSettings>
    </SfGantt>*@

@*@code{
        private DateTime ProjectStart = new DateTime(2022, 03, 25);
        private DateTime ProjectEnd = new DateTime(2022, 05, 10);
        private List<TaskData> TaskCollection { get; set; }
        private List<ResourceAlloacteData> ResourceCollection { get; set; }

        protected override void OnInitialized()
        {
            this.TaskCollection = GetTaskCollection();
            this.ResourceCollection = GetResources;
        }

        public class ResourceAlloacteData
        {
            public int ResourceId { get; set; }
            public string ResourceName { get; set; }
            public double Unit { get; set; }
        }

        public static List<ResourceAlloacteData> GetResources = new List<ResourceAlloacteData>()
        {
            new ResourceAlloacteData() { ResourceId= 1, ResourceName= "Martin Tamer"},
            new ResourceAlloacteData() { ResourceId= 2, ResourceName= "Rose Fuller" },
            new ResourceAlloacteData() { ResourceId= 3, ResourceName= "Margaret Buchanan" },
            new ResourceAlloacteData() { ResourceId= 4, ResourceName= "Fuller King" },
            new ResourceAlloacteData() { ResourceId= 5, ResourceName= "Davolio Fuller" },
            new ResourceAlloacteData() { ResourceId= 7, ResourceName= "Fuller Buchanan" },
            new ResourceAlloacteData() { ResourceId= 8, ResourceName= "Jack Davolio" },
            new ResourceAlloacteData() { ResourceId= 9, ResourceName= "Tamer Vinet" },
            new ResourceAlloacteData() { ResourceId= 10, ResourceName= "Vinet Fuller" },
            new ResourceAlloacteData() { ResourceId= 11, ResourceName= "Bergs Anton" },
            new ResourceAlloacteData() { ResourceId= 12, ResourceName= "Construction Supervisor" }
        };

        public class TaskData
        {
            public int TaskId { get; set; }
            public string TaskName { get; set; }
            public DateTime StartDate { get; set; }
            public DateTime EndDate { get; set; }
            public string Duration { get; set; }
            public int Progress { get; set; }
            public int? ParentId { get; set; }
            public List<ResourceAlloacteData> Resources { get; set; }
        }

        public static List<TaskData> GetTaskCollection()
        {
            List<TaskData> Tasks = new List<TaskData>() {
                new TaskData() { TaskId = 1, TaskName = "Project initiation", StartDate = new DateTime(2022, 03, 28), EndDate = new DateTime(2022, 07, 28), Duration="4", Resources = new List<ResourceAlloacteData>(){ new ResourceAlloacteData() { ResourceId=1, Unit=70} } },
                new TaskData() { TaskId = 2, TaskName = "Identify Site location", StartDate = new DateTime(2022, 03, 29), Progress = 30, ParentId = 1, Duration="2", Resources = new List<ResourceAlloacteData>(){ new ResourceAlloacteData() { } ,new ResourceAlloacteData() { ResourceId=6} } },
                new TaskData() { TaskId = 3, TaskName = "Perform soil test", StartDate = new DateTime(2022, 03, 29), Resources = new List<ResourceAlloacteData>(){ new ResourceAlloacteData() { ResourceId=2} ,new ResourceAlloacteData() { ResourceId=3} }, ParentId = 1, Duration="4" },
                new TaskData() { TaskId = 4, TaskName = "Soil test approval", StartDate = new DateTime(2022, 03, 29), Duration = "1", Progress = 30, ParentId = 1, Resources = new List<ResourceAlloacteData>(){ new ResourceAlloacteData() { ResourceId=8} ,new ResourceAlloacteData() { ResourceId=9} } },
                new TaskData() { TaskId = 5, TaskName = "Project estimation", StartDate = new DateTime(2022, 03, 29), EndDate = new DateTime(2022, 04, 2), Duration="4" },
                new TaskData() { TaskId = 6, TaskName = "Develop floor plan for estimation", StartDate = new DateTime(2022, 03, 29), Duration = "3", Progress = 30, ParentId = 5, Resources = new List<ResourceAlloacteData>(){ new ResourceAlloacteData() { ResourceId=4} } },
                new TaskData() { TaskId = 7, TaskName = "List materials", StartDate = new DateTime(2022, 04, 01), Duration = "3", Progress = 30, ParentId = 5, Resources = new List<ResourceAlloacteData>(){ new ResourceAlloacteData() { ResourceId=4},new ResourceAlloacteData() { ResourceId=8} }, },
                new TaskData() { TaskId = 8, TaskName = "Estimation approval", StartDate = new DateTime(2022, 04, 01), Duration = "2", ParentId = 5, Resources = new List<ResourceAlloacteData>(){ new ResourceAlloacteData() { ResourceId= 12},new ResourceAlloacteData() { ResourceId= 5} }, }
            };
            return Tasks;
        }
    }*@