@page "/gorevler"
@inject ITaskService taskService
@inject NavigationManager navigationManager

<SfGrid Height="100vh" DataSource="@TaskDtos" Toolbar="@ToolbarItems" ColumnMenuItems=@MenuItems
        AllowReordering="true" AllowPaging="true" AllowFiltering="true" AllowSorting="true" AllowGrouping="true" AllowResizing="true"
        ShowColumnChooser="true" ShowColumnMenu="true">

    <GridEditSettings AllowAdding="true" AllowDeleting="true" AllowEditing="true"></GridEditSettings>
    <GridPageSettings PageSize="10"></GridPageSettings>
    <GridEvents CommandClicked="OnCommandClicked" TValue="TaskDto"></GridEvents>
    <GridSelectionSettings Mode=SelectionMode.Row></GridSelectionSettings>

    <GridColumns>
        <GridColumn Field=@nameof(taskDto.ID0) HeaderText="ID" IsPrimaryKey="true" TextAlign="TextAlign.Right" Width="20" MinWidth="20" MaxWidth="100" AllowEditing="false" AllowReordering="false"></GridColumn>
        <GridColumn Field=@nameof(taskDto.PYProjeKoduID) HeaderText="Proje Kodu" Width="50" MinWidth="20" MaxWidth="200"></GridColumn>
        <GridColumn Field=@nameof(taskDto.Konu) HeaderText="Konu" TextAlign="TextAlign.Left" Width="200" MinWidth="20" MaxWidth="1000"></GridColumn>
        <GridColumn Field=@nameof(taskDto.PlanlananBaslamaTarihi) HeaderText="Başlama Tarihi" EditType="EditType.DatePickerEdit" Format="d" TextAlign="TextAlign.Right" Width="50" MinWidth="20" MaxWidth="200"></GridColumn>
        <GridColumn Field=@nameof(taskDto.PlanlananBitisTarihi) HeaderText="Bitiş Tarihi" EditType="EditType.DatePickerEdit" Format="d" TextAlign="TextAlign.Right" Width="50" MinWidth="20" MaxWidth="200"></GridColumn>
        @*<GridColumn Field=@nameof(TaskDto.Sure) HeaderText="Süreç" TextAlign="TextAlign.Left" Width="30" MinWidth="20" MaxWidth="200"></GridColumn>*@
        <GridColumn HeaderText="Details" Width="50" MinWidth="20" MaxWidth="200">
            <GridCommandColumns>
                <GridCommandColumn Type="CommandButtonType.Edit" ButtonOption="@(new CommandButtonOptions() { IconCss = "e-icons e-edit", CssClass = "e-flat" })"></GridCommandColumn>
                <GridCommandColumn Type="CommandButtonType.Delete" ButtonOption="@(new CommandButtonOptions() { IconCss = "e-icons e-delete", CssClass="e-flat" })"></GridCommandColumn>
            </GridCommandColumns>
        </GridColumn>
    </GridColumns>
</SfGrid>

@code {
    private List<string> ToolbarItems = new List<string>() { "Add", "Edit", "Delete", "Update", "Cancel", "ColumnChooser" };
    public string[] MenuItems = new string[] { "Group", "Ungroup", "ColumnChooser", "Filter", "ColumnChooser" };

    public TaskDto taskDto = new TaskDto();
    public List<TaskDto> TaskDtos = new List<TaskDto>();
    public TaskDto RowDetails { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        var result = await taskService.GetActiveTaskList();
        TaskDtos = result;
    }

    public void OnCommandClicked(CommandClickEventArgs<TaskDto> args)
    {
        if (args.CommandColumn.Type.ToString() == "Delete")
        {
            taskService.DeleteTask(args.RowData);
        }
        else if (args.CommandColumn.Type.ToString() == "Edit")
        {
            RowDetails = args.RowData;
            navigationManager.NavigateTo($"gorevdetay/{args.RowData.ID0}");
        }
    }
}